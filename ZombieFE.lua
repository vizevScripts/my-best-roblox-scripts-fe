local players=game:GetService("Players")
local youzombieplayer=players.LocalPlayer
local zombiecharacter=youzombieplayer.Character
local playermouse=youzombieplayer:GetMouse() 
local function waitForCharacter() repeat wait() until zombiecharacter end if not zombiecharacter then waitForCharacter() end
local humanoid=zombiecharacter:FindFirstChildOfClass("Humanoid") 
local function waitForHumanoid() repeat wait() until humanoid end if not humanoid then waitForHumanoid() end 
local rootPart=zombiecharacter:FindFirstChild("HumanoidRootPart") 
local function waitForRootPart() repeat wait() until rootPart end if not rootPart then waitForRootPart() end
local function createAnimation(animationid) local animation=Instance.new("Animation") animation.AnimationId=animationid return animation end
local killeranimations={run=createAnimation("rbxassetid://3489173414"),swing=createAnimation("rbxassetid://3489169607"),death=createAnimation("rbxassetid://3716468774")}
local runlikedangerouszombieanimation=humanoid:LoadAnimation(killeranimations.run)
local hitpunishzombieanimation=humanoid:LoadAnimation(killeranimations.swing)
local deadzombieanimation=humanoid:LoadAnimation(killeranimations.death)
local zombieattack=false local readytorage=false local youcanusefesounds=false
local ragesound local attacksound local attacksound1
local function checkIfYouCanUseZombieFESounds() local youCanUseFESounds=game:GetService("SoundService").RespectFilteringEnabled if not youCanUseFESounds then print("SUCCESS!") return true else warn("Sorry but you can't use fe sounds! [SS's Filtering Enabled Boolean: true]") return false end end
if _G.UseFEZombieSounds then if checkIfYouCanUseZombieFESounds() then youcanusefesounds=true local rageSound=Instance.new("Sound",rootPart) rageSound.SoundId="http://www.roblox.com/asset/?id=25954407" rageSound.PlaybackSpeed=0.847 local attackSound=Instance.new("Sound",rootPart) attackSound.SoundId="rbxassetid://131138832" attackSound.PlaybackSpeed=0.8 local attackSound2=Instance.new("Sound",rootPart) attackSound2.SoundId="rbxassetid://131138828" attackSound2.PlaybackSpeed=0.8 ragesound=rageSound attacksound=attackSound attacksound1=attackSound2 end end
local function fakeattack() if not zombieattack then zombieattack=true hitpunishzombieanimation:Play() hitpunishzombieanimation:AdjustSpeed(2) wait(1) zombieattack=false end end
local animatescript=zombiecharacter:FindFirstChild("Animate") if animatescript then animatescript:Destroy() end
local function zombierunning(zombierunningspeed) if zombierunningspeed>0.4 then runlikedangerouszombieanimation:Play() elseif zombierunningspeed<0.4 then runlikedangerouszombieanimation:Stop() end end humanoid.Running:Connect(zombierunning)
local function zombiedied() if readytorage then readytorage = false end if zombieattack then zombieattack = false end warn("Your zombie is dead! To run script again inject it again!") deadzombieanimation:Play() wait(3) end humanoid.Died:Connect(zombiedied)
local function findnewzombietarget() local target for _,players in pairs(game:GetService("Players"):GetPlayers()) do if players and players.Character then local character=players.Character local characterhumanoid=character:FindFirstChildOfClass("Humanoid") local characterrootpart=character:FindFirstChild("HumanoidRootPart") if characterrootpart and characterhumanoid and characterhumanoid.Health > 0 then local distance = (rootPart.Position - characterrootpart.Position).Magnitude if distance < 100 and not target then target=character end end end end return target end
local function attacktarget(target) if not target then return end local targetPart=target:FindFirstChild("HumanoidRootPart") if not targetPart then return end local targetHumanoid=target:FindFirstChildOfClass("Humanoid") local usefakeattack=false repeat wait() local path=game:GetService("PathfindingService"):CreatePath() path:ComputeAsync(rootPart.Position, targetPart.Position) local waypoints=path:GetWaypoints() if path.Status==Enum.PathStatus.Success then for _,waypoint in pairs(waypoints) do if waypoint.Action==Enum.PathWaypointAction.Jump then humanoid.Jump=true end humanoid:MoveTo(waypoint.Position) end end if (rootPart.Position - targetPart.Position).Magnitude<7 and not usefakeattack and not zombieattack then if youcanusefesounds then local random=math.random(1,2) if random==1 then attacksound:Play() elseif random == 2 then attacksound1:Play() end end usefakeattack=true fakeattack() usefakeattack=false end until not targetPart or targetPart and not targetHumanoid or targetHumanoid and targetHumanoid.Health == 0 usefakeattack=false zombieattack=false hitpunishzombieanimation:Stop() end
local function wander() local wanderX,wanderZ=math.random(-100,100),math.random(-30, 30) if wanderZ<wanderX then humanoid:MoveTo(Vector3.new(rootPart.Position+Vector3.new(wanderX,0,wanderZ))) end end
while true do wait() if rootPart and humanoid and humanoid.Health > 0 then local zombienewtarget = findnewzombietarget() if zombienewtarget and zombienewtarget:FindFirstChild("HumanoidRootPart") and zombienewtarget:FindFirstChildOfClass("Humanoid") then attacktarget(zombienewtarget) local zombiehumanoid=zombienewtarget:FindFirstChildOfClass("Humanoid") if zombiehumanoid and zombiehumanoid.Health>0 then if zombiehumanoid.Jump then humanoid.Jump=true end end end if not zombienewtarget or zombienewtarget and not zombienewtarget:FindFirstChild("HumanoidRootPart") or zombienewtarget:FindFirstChild("HumanoidRootPart") and not zombienewtarget:FindFirstChildOfClass("Humanoid") or zombienewtarget:FindFirstChildOfClass("Humanoid") and zombienewtarget:FindFirstChildOfClass("Humanoid").Health==0 then wander() local randomjump=0 if randomjump<100 then humanoid.Jump=true else if randomjump==100 or randomjump>100 then randomjump=0 end end end else if not rootPart or rootPart and not humanoid or humanoid and humanoid.Health == 0 then if zombieattack then zombieattack=false end if hitpunishzombieanimation.IsPlaying then hitpunishzombieanimation:Stop() end if readytorage then readytorage = false end if ragesound and ragesound.IsPlaying then ragesound:Stop() end if attacksound and attacksound.IsPlaying then attacksound:Stop() end if attacksound1 and attacksound1.IsPlaying then attacksound1:Stop() end break end end end
